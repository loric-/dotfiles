# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
 
# Set name of the theme to load.
ZSH_THEME="theunraveler"

# red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"
 
# enable oh my zsh plugins
plugins=(autojump debian tmux svn python pip git git-extras docker docker-compose)
 
source $ZSH/oh-my-zsh.sh
 
# Customize to your needs...
 
# Path
export PATH=$PATH:~/.bin/
export PATH=$PATH:~/.gem/ruby/2.1.0/bin/
 
# Alias
alias zshr="source ~/.zshrc"
alias raspi="ssh pi@brvt.no-ip.org"
alias ..="cd .."
alias ...="cd ../.."
alias Lab="~/Lab/"
alias lab="~/Lab/"
alias dk="docker"
alias dkc="docker-compose"
alias dkm="docker-machine"
alias dkr="unset DOCKER_TLS_VERIFY && unset DOCKER_CERT_PATH && unset DOCKER_HOST"
alias dke="docker exec -ti"
alias ans="ansible"
alias ansp="ansible-playbook"
alias ssh="sshrc"
alias venv="source venv/bin/activate"
alias extip="wget http://ipinfo.io/ip -qO -"

alias py="python"
alias ipy="ipython"
alias py3="python3"
alias ipy3="ipython3"
alias dj="python manage.py"

alias cstrike="wine ~/Counter\ Strike/hl.exe -game cstrike -noforcemparms -noforcemaccel"

alias df="df -H"
alias du="du -ch"
alias top="htop"
alias copy="xclip -selection clipboard"

# Prevent scroll lock
stty -ixon -ixoff

# Launch ls after cd command
function chpwd() {
    emulate -L zsh
    ll
}

# Search for files
function ffind() {
    if [[ -z $2 ]]; then
        DIR=.
    else
        DIR=$2
    fi
    find $DIR -iname "*$1*" 2>/dev/null;
}

# Search for string
function ggrep() {
    if [[ -z $2 ]]; then
        DIR=.
    else
        DIR=$2
    fi
    grep -RIin "$1" $DIR 2>/dev/null;
}

# mkdir and cd using a single command
function mkdircd () { mkdir -p "$@" && eval cd "\"\$$#\""; }

# Always work in a tmux session if tmux is installed
#if which tmux 2>&1 >/dev/null; then
#    if [ $TERM != "screen-256color" ] && [  $TERM != "screen" ]; then
#        tmux attach -t hack || tmux new -s hack; exit
#    fi
#fi

# Powerline
#. ~/.config/powerline/powerline/bindings/zsh/powerline.zsh

# Add autocompletion for ssh with sshrc
compdef sshrc=ssh

# Start docker ungit
function ungit () {
    docker rm -f ungit &> /dev/null
    if [[ -z $1 ]]; then
        REPO=$PWD
    else
        REPO=$1
    fi
    docker run --name ungit -v $SSH_AUTH_SOCK:/ssh-agent -e SSH_AUTH_SOCK=/ssh-agent -v $HOME/.ssh/known_hosts:/home/developer/.ssh/known_hosts -v $HOME/.gitconfig:/home/developer/.gitconfig -p 8448:8448 -d -v $REPO:/repo mybuilds/ungit
}
